name: Release

on:
  release:
    types: [published]

jobs:

  build:
    name: Build release binaries
    runs-on: ubuntu-latest
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Set up Go 1.x
      uses: actions/setup-go@v3
      with:
        go-version: '^1.20'
        fetch-depth: 0
      id: go

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v4
      with:
        # either 'goreleaser' (default) or 'goreleaser-pro'
        distribution: goreleaser
        workdir: .
        version: latest
        args: release --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Your GoReleaser Pro key, if you are using the 'goreleaser-pro' distribution
          # GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}

    - name: Upload assets
      uses: actions/upload-artifact@v3
      with:
        name: traefik-forward-auth
        path: ./dist/*

  register:
    # https://buildpacks.io/docs/buildpack-author-guide/publishing-with-github-actions/
    name: Package, Publish to Docker hub
    runs-on:
      - ubuntu-latest
    steps:
      - id: checkout
        uses: actions/checkout@v3
      - if: ${{ github.event_name != 'pull_request' || ! github.event.pull_request.head.repo.fork }}
        uses: docker/login-action@v2
        env:
          DOCKER_CONFIG: $HOME/.docker
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASS }}
      - id: setup-pack
        uses: buildpacks/github-actions/setup-pack@v5.0.1
      - id: register
        run: |
          #!/usr/bin/env bash
          set -euo pipefail

          GO_MOD_NAME=$(grep -m 1 'module ' go.mod | cut -d' ' -f2)
          GO_MOD_BASE_NAME=$(echo $GO_MOD_NAME | awk -F '/' '{print $NF}')
          VERSION="$(git describe --always --tags --abbrev=0 --match 'v*' --exclude '*/*' | tr -d "[\r\n]")"
          PACKAGE="${REPO}/$GO_MOD_BASE_NAME:${VERSION}"

          # https://github.com/buildpacks/spec/blob/main/platform.md#registry-authentication
          # https://github.com/google/go-containerregistry/blob/3624968304fdc039a5d90be0be239c394db1f3e9/pkg/authn/keychain.go#L74
          unset CNB_REGISTRY_AUTH

          echo "PACKAGE: $PACKAGE"

          pack config experimental true
          pack config pull-policy always

          REPO_URL=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY

          # https://paketo.io/docs/howto/go/
          # https://github.com/paketo-buildpacks/image-labels
          # https://github.com/opencontainers/image-spec/blob/main/annotations.md
          # https://docs.github.com/en/actions/learn-github-actions/variables#default-environment-variables

          # paketo-buildpacks/go => docker.io/80x86/paketo-buildpacks-go:4.0.3 wigh go1.20 support
          pack build "$PACKAGE" --buildpack docker.io/80x86/paketo-buildpacks-go:4.0.3 \
          --builder paketobuildpacks/builder-jammy-base:latest \
          --publish \
          --env BP_GO_VERSION="1.20.0" \
          --env BP_GO_BUILD_LDFLAGS="-s -w" \
          --env BP_GO_TARGETS="./cmd/traefik-forward-auth" \
          --env BP_OCI_TITLE="$GO_MOD_BASE_NAME" \
          --env BP_OCI_AUTHORS="$GITHUB_ACTOR" \
          --env BP_OCI_CREATED="$(date --rfc-3339=seconds)" \
          --env BP_OCI_DESCRIPTION="Minimal forward authentication service that provides Google/OpenID oauth based login and authentication for the traefik reverse proxy" \
          --env BP_OCI_DOCUMENTATION="$REPO_URL" \
          --env BP_OCI_REF_NAME="$GITHUB_REF_NAME" \
          --env BP_OCI_REVISION="$GITHUB_SHA" \
          --env BP_OCI_SOURCE="$REPO_URL" \
          --env BP_OCI_URL="$REPO_URL" \
          --env BP_OCI_VERSION="$GITHUB_REF_NAME"
        shell: bash
        env:
          REPO: docker.io/${{ secrets.DOCKER_HUB_USER }}
          DOCKER_CONFIG: $HOME/.docker
